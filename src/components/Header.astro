---
import Logo from "@/images/logo.svg";
import ThemeSwitcher from "./theme-switcher";
import { MobileMenu, MenuToggle } from "./menu";
import { Icon } from "astro-icon/components";

const navItems = [
	{ href: "/#about", label: "About" },
	{ href: "/#skills", label: "Skills" },
	{ href: "/#projects", label: "Projects" },
	{ href: "/#experience", label: "Experience" },
	{ href: "/about", label: "Details" },
];
const themeLabels = {
	light: "Light",
	dark: "Dark",
	rosey: "Rosey",
	system: "System",
};

const themes = [
	{ name: "light", label: "Light", iconname: "pixelarticons:sun-alt" },
	{ name: "dark", label: "Dark", iconname: "pixelarticons:moon" },
	{ name: "rosey", label: "Rosey", iconname: "pixelarticons:moon" },
	{
		name: "system",
		label: "System",
		iconname: "pixelarticons:device-laptop",
	},
];

export type Theme = keyof typeof themeLabels;

const theme: Theme = Astro.cookies.get("theme")?.value as Theme;
---

<header
	class="sticky top-0 z-50 w-full border-b border-border/40 bg-background/90 backdrop-blur supports-[backdrop-filter]:bg-background/60"
>
	<div
		class="container mx-auto flex gap-4 h-fit max-w-screen-2xl items-center justify-between px-4 py-2"
	>
		<a href="/" class="flex items-center gap-2 group text-primary">
			<Logo class="size-[clamp(2rem,5vw,4rem)]" />
			<span class="font-bold text-xl tracking-tight">zoasr</span>
		</a>

		<nav class="hidden md:flex items-center gap-6 text-sm">
			{
				navItems.map((item) => (
					<a
						href={item.href}
						data-sectionid={item.href.split("#")[1]}
						class="text-muted-foreground transition-colors hover:text-primary hover:font-medium data-[active=true]:text-primary"
						data-active={"false"}
					>
						{item.label}
					</a>
				))
			}
		</nav>
		<span class="md:inline hidden">
			<noscript>
				<style>
					noscript {
						display: contents;
					}
				</style>
				<div
					id="themeselector"
					class="flex gap-2 items-center justify-center flex-wrap"
					role="radiogroup"
				>
					{
						themes.map((theme) => (
							<label
								role="radio"
								class="has-checked:bg-primary text-xs has-checked:text-accent cursor-pointer p-2 rounded-md flex gap-2 items-center justify-center flex-wrap"
							>
								<Icon name={theme.iconname} class="inline" />
								<span>{theme.label}</span>
								<input
									tabindex="0"
									class="sr-only"
									data-theme={theme.name}
									type="radio"
									name="theme"
								/>
							</label>
						))
					}
				</div>
			</noscript>
			<ThemeSwitcher client:only theme={theme} />
		</span>
		<noscript>
			<label class="text-primary md:hidden cursor-pointer">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					class="size-8 text-primary fill-primary"
					><path
						fill="currentColor"
						d="M4 6h16v2H4zm0 5h16v2H4zm16 5H4v2h16z"></path></svg
				>
				<input type="checkbox" class="sr-only" name="menutoggle" />
			</label>
		</noscript>
		<MenuToggle client:only>
			<Icon
				slot="open"
				aria-label="Open menu"
				tabindex={0}
				class="size-8"
				name="pixelarticons:menu"
			/>
			<Icon
				slot="close"
				aria-label="Close menu"
				tabindex={0}
				class="size-8"
				name="pixelarticons:close"
			/>
		</MenuToggle>
	</div>
	<noscript>
		<div
			class="md:hidden absolute top-full left-0 w-full max-h-fit bg-background/90 backdrop-blur-2xl border-b border-border/40 transition-all duration-200"
			class:list={["h-0 opacity-0 pointer-events-none"]}
			id="mobile-nav-menu"
		>
			<nav class="flex flex-col items-stretch gap-1 p-4 w-full h-full">
				{
					navItems.map((item) => (
						<a
							href={item.href}
							class="text-muted-foreground transition-colors hover:text-primary hover:bg-background w-full text-center py-3 rounded-md text-base data-[active=true]:text-primary"
							data-active={"false"}
							data-sectionid={item.href.split("#")[1]}
						>
							{item.label}
						</a>
					))
				}
				<div
					id="themeselector"
					class="flex gap-4 items-center justify-center"
					role="radiogroup"
				>
					{
						themes.map((theme) => (
							<label
								role="radio"
								class="has-checked:bg-primary text-xs has-checked:text-accent cursor-pointer p-2 rounded-md flex gap-2 items-center"
							>
								<Icon name={theme.iconname} class="inline" />
								<span>{theme.label}</span>
								<input
									tabindex="0"
									class="sr-only"
									data-theme={theme.name}
									type="radio"
									name="theme"
								/>
							</label>
						))
					}
				</div>
			</nav>
		</div>
	</noscript>
	<MobileMenu client:only navItems={navItems} theme={theme} />
</header>

<script>
	const sectionEls = document.querySelectorAll("section[id]");

	//intersection observer
	const observer = new IntersectionObserver(
		(entries) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					const sectionId = entry.target.id;
					const navLink = document.querySelectorAll(
						`nav a[data-sectionid="${sectionId}"]`
					);
					if (navLink.length > 0) {
						navLink.forEach((link) => {
							link.setAttribute("data-active", "true");
						});
					}
				} else {
					const sectionId = entry.target.id;
					const navLink = document.querySelectorAll(
						`nav a[data-sectionid="${sectionId}"]`
					);
					if (navLink.length > 0) {
						navLink.forEach((link) => {
							link.setAttribute("data-active", "false");
						});
					}
				}
			});
		},
		{
			threshold: 0.2,
		}
	);
	sectionEls.forEach((sectionEl) => {
		observer.observe(sectionEl);
	});
</script>

<style>
	header:has(input[name="menutoggle"]:checked) #mobile-nav-menu {
		@apply h-[350px] opacity-100 pointer-events-auto;
	}
</style>
