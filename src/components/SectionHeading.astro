---
const { title, sectionId } = Astro.props;
---

<svg width="0" height="0">
	<filter
		opacity="0.5"
		id="glow-blur"
		width="300%"
		height="300%"
		x="-100%"
		y="-100%"
	>
		<feGaussianBlur in="SourceGraphic" result="blur" stdDeviation="10"
		></feGaussianBlur>
		<feColorMatrix
			in="blur"
			type="matrix"
			values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 0.7 0"
		></feColorMatrix>
		<feComposite in="SourceGraphic" operator="lighter"></feComposite>
	</filter>
</svg>

<div
	class="text-center mb-16 section-heading mx-auto"
	data-sectionid={sectionId}
>
	<h2
		class="heading-text text-3xl font-bold tracking-tighter text-foreground mx-auto w-fit sm:text-4xl md:text-5xl relative"
	>
		{title}
		<span class="heading-mask absolute -inset-4 rounded-md"> </span>
	</h2>
</div>
<style>
	@property --border-right-end {
		syntax: "<angle>";
		initial-value: 0deg;
		inherits: true;
	}
	@property --border-left-end {
		syntax: "<angle>";
		initial-value: 0deg;
		inherits: true;
	}

	.section-heading {
		filter: url(#glow-blur);
	}

	.heading-mask {
		--border-width: 5px;

		--border-right-end: calc(180deg - var(--clipping-width));
		--border-left-end: calc(180deg + var(--clipping-width));

		--clip-path: calc(var(--border-width)) var(--border-width),
			calc(100% - var(--border-width)) var(--border-width),
			calc(100% - var(--border-width)) calc(100% - var(--border-width)),
			calc(var(--border-width)) calc(100% - var(--border-width)),
			var(--border-width) var(--border-width);
		background: conic-gradient(
				from 0deg,
				transparent 0deg,
				transparent var(--border-right-end),
				var(--primary) var(--border-right-end),
				var(--primary) var(--border-left-end),
				transparent var(--border-left-end)
			)
			border-box;
		clip-path: polygon(
			evenodd,
			0 0,
			100% 0,
			100% 100%,
			0 100%,
			0 0,
			var(--clip-path)
		);
		z-index: -1;
		transition:
			--border-right-end 0.5s ease-in-out,
			--border-left-end 0.5s ease-in-out;

		&:hover {
			--clipping-width: 180deg;
		}
	}
	.heading-text {
		--clipping-width: 30deg;
		height: 120%;
		transition: text-shadow 0.5s ease-in-out;
		&:hover {
			.heading-mask {
				--clipping-width: 180deg;
			}
		}
	}
</style>

<script>
	import { gsap } from "gsap";

	import { ScrollTrigger } from "gsap/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);

	const sectionHeading = document.querySelectorAll(`.section-heading`);
	sectionHeading.forEach((heading) => {
		gsap.from(heading, {
			scrollTrigger: {
				trigger: heading,
				toggleActions: "restart none none reverse",
			},
			y: 100,
			duration: 1,
			ease: "back.out",
		});
	});
</script>
